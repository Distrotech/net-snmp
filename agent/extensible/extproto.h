struct variable;

char *find_field __P((char *, int));
char *skip_white __P((char *));
char *skip_not_white __P((char *));
int get_ps_output __P((struct extensible *));
int get_exec_output __P((struct extensible *));
void setPerrorstatus __P((char *));
void seterrorstatus __P((char *, int));
void copy_word __P((char *, char *));
int clear_cache __P((int, u_char *, u_char, int, u_char *, oid *,int));
int update_hook __P((int, u_char *, u_char, int, u_char *, oid *,int));
RETSIGTYPE update_config __P((int));
struct extensible *get_exten_instance __P((struct extensible *, int));
unsigned char *var_extensible_version __P((struct variable *, oid *, int *, int, int *, int (**write) __P((int, u_char *, u_char, int, u_char *, oid *, int)) ));
unsigned char *var_extensible_disk __P((struct variable *, oid *, int *, int, int *, int (**write) __P((int, u_char *, u_char, int, u_char *, oid *, int)) ));
unsigned char *var_extensible_pass __P((struct variable *, oid *, int *, int, int *, int (**write) __P((int, u_char *, u_char, int, u_char *, oid *, int)) ));
unsigned char *var_extensible_proc __P((struct variable *, oid *, int *, int, int *, int (**write) __P((int, u_char *, u_char, int, u_char *, oid *, int)) ));
unsigned char *var_extensible_relocatable __P((struct variable *, oid *, int *, int, int *, int (**write) __P((int, u_char *, u_char, int, u_char *, oid *, int)) ));
unsigned char *var_extensible_loadave __P((struct variable *, oid *, int *, int, int *, int (**write) __P((int, u_char *, u_char, int, u_char *, oid *, int)) ));
unsigned char *var_extensible_errors __P((struct variable *, oid *, int *, int, int *, int (**write) __P((int, u_char *, u_char, int, u_char *, oid *, int)) ));
unsigned char *var_extensible_shell __P((struct variable *, oid *, int *, int, int *, int (**write) __P((int, u_char *, u_char, int, u_char *, oid *, int)) ));
int restart_hook __P((int, u_char *, u_char, int, u_char *, oid *,int));
void print_mib_oid __P((oid *,int));
void sprint_mib_oid __P((char *, oid *,int));
int parse_miboid __P((char *, oid *));
void free_config __P((struct myproc **, struct extensible **, struct extensible **, struct extensible **));
int read_config __P((char *, struct myproc **, int *, struct extensible **, int *, struct extensible**, int *, struct extensible **, int *, int *, struct diskpart *, int *, double *));
int klookup __P((unsigned long, char *, int));
int subtree_old_size __P((void));
void init_extensible __P((void));
int exec_command __P((struct extensible *));
int shell_command __P((struct extensible *));
int checkmib __P((struct variable *, oid *, int *, int, int *, int (**write) __P((int, u_char *, u_char, int, u_char *, oid *, int)), oid *,int));
int sh_count_procs __P((char *));
int fixProcError __P((int, u_char *, u_char, int, u_char *, oid *,int));
int fixExecError __P((int, u_char *, u_char, int, u_char *, oid *,int));
